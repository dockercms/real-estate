package com.ztuo.modules.house.service.impl;


import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.ztuo.common.utils.DateUtil;
import com.ztuo.modules.house.dao.AdvertisingDAO;
import com.ztuo.modules.house.entity.Advertising;
import com.ztuo.modules.house.entity.AdvertisingExample;
import com.ztuo.modules.house.service.IAdvertisingSV;
import com.ztuo.modules.house.vo.AdvertisingQueryVO;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class AdvertisingSVImpl implements IAdvertisingSV {
    
    @Autowired
    private AdvertisingDAO dao;
    
    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table advertising
     *
     * @date 2020-03-03 18:41:23
     */
    @Override
    public int countByExample(AdvertisingExample example) throws Exception {
    		return dao.countByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table advertising
     *
     * @date 2020-03-03 18:41:23
     */
    @Override
    public int deleteByExample(AdvertisingExample example) throws Exception {
    		return dao.deleteByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table advertising
     *
     * @date 2020-03-03 18:41:23
     */
    @Override
    public int deleteByPrimaryKey(Long parameterId) throws Exception {
    		return dao.deleteByPrimaryKey(parameterId);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table advertising
     *
     * @date 2020-03-03 18:41:23
     */
    @Override
    public int save(Advertising record) throws Exception {
    		return dao.save(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table advertising
     *
     * @date 2020-03-03 18:41:23
     */
    @Override
    public int saveSelective(Advertising record) throws Exception {
    		return dao.saveSelective(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table advertising
     *
     * @date 2020-03-03 18:41:23
     */
    @Override
    public List<Advertising> getByExample(AdvertisingExample example) throws Exception {
    		return dao.getByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table advertising
     *
     * @date 2020-03-03 18:41:23
     */
    @Override
    public Advertising getByPrimaryKey(Long parameterId) throws Exception {
    		return dao.getByPrimaryKey(parameterId);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table advertising
     *
     * @date 2020-03-03 18:41:23
     */
    @Override
    public int updateByExampleSelective(Advertising record, AdvertisingExample example) throws Exception {
    		return dao.updateByExampleSelective(record, example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table advertising
     *
     * @date 2020-03-03 18:41:23
     */
    @Override
    public int updateByExample(Advertising record, AdvertisingExample example) throws Exception {
    		return dao.updateByExample(record, example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table advertising
     *
     * @date 2020-03-03 18:41:23
     */
    @Override
    public int updateByPrimaryKeySelective(Advertising record) throws Exception {
    		return dao.updateByPrimaryKeySelective(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table advertising
     *
     * @date 2020-03-03 18:41:23
     */
    @Override
    public int updateByPrimaryKey(Advertising record) throws Exception {
    		return dao.updateByPrimaryKey(record);
    }

    @Override
    public Page<Advertising> pageQuery(AdvertisingQueryVO queryVO)throws Exception {
        Page<Advertising> page = new Page<>(queryVO.getPageNum(),queryVO.getPageSize());
        AdvertisingExample example = new AdvertisingExample();
        AdvertisingExample.Criteria criteria = example.createCriteria();
        if(StringUtils.isNotEmpty(queryVO.getCreateStartTime())){
            criteria.andCreateTimeGreaterThan(DateUtil.YYYY_MM_DD_MM_HH_SS.parse(queryVO.getCreateStartTime()));
        }
        if(StringUtils.isNotEmpty(queryVO.getCreateEndTime())){
            criteria.andCreateTimeLessThan(DateUtil.YYYY_MM_DD_MM_HH_SS.parse(queryVO.getCreateEndTime()));
        }
        if(StringUtils.isNotEmpty(queryVO.getLocation())){
            criteria.andLocationEqualTo(queryVO.getLocation());
        }
        if(queryVO.getEffectTime()!=null){
            criteria.andEffectTimeLessThan(queryVO.getEffectTime());
            criteria.andFailureTimeGreaterThan(queryVO.getEffectTime());
        }
        example.setOrderByClause(" create_time desc ");
        List<Advertising> list = dao.pageQueryByExample(page, example);
        return page.setRecords(list);
    }
}
