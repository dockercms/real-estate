package com.ztuo.modules.house.service.impl;


import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.ztuo.modules.house.dao.FavoriteHouseDAO;
import com.ztuo.modules.house.dao.HouseResourceDAO;
import com.ztuo.modules.house.dao.UygurHouseResourceDAO;
import com.ztuo.modules.house.entity.*;
import com.ztuo.modules.house.service.IFavoriteHouseSV;
import com.ztuo.modules.house.vo.FavoriteHouseQuery;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

@Service
public class FavoriteHouseSVImpl implements IFavoriteHouseSV {
    
    @Autowired
    private FavoriteHouseDAO dao;

    @Autowired
    private HouseResourceDAO houseResourceDAO;

    @Autowired
    private UygurHouseResourceDAO uygurHouseResourceDAO ;

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table favorite_house
     *
     * @date 2020-02-10 16:50:53
     */
    @Override
    public int countByExample(FavoriteHouseExample example) throws Exception {
    		return dao.countByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table favorite_house
     *
     * @date 2020-02-10 16:50:53
     */
    @Override
    public int deleteByExample(FavoriteHouseExample example) throws Exception {
    		return dao.deleteByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table favorite_house
     *
     * @date 2020-02-10 16:50:53
     */
    @Override
    public int deleteByPrimaryKey(Long parameterId) throws Exception {
    		return dao.deleteByPrimaryKey(parameterId);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table favorite_house
     *
     * @date 2020-02-10 16:50:53
     */
    @Override
    public int save(FavoriteHouse record) throws Exception {
    		return dao.save(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table favorite_house
     *
     * @date 2020-02-10 16:50:53
     */
    @Override
    public int saveSelective(FavoriteHouse record) throws Exception {
    		return dao.saveSelective(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table favorite_house
     *
     * @date 2020-02-10 16:50:53
     */
    @Override
    public List<FavoriteHouse> getByExample(FavoriteHouseExample example) throws Exception {
    		return dao.getByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table favorite_house
     *
     * @date 2020-02-10 16:50:53
     */
    @Override
    public FavoriteHouse getByPrimaryKey(Long parameterId) throws Exception {
    		return dao.getByPrimaryKey(parameterId);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table favorite_house
     *
     * @date 2020-02-10 16:50:53
     */
    @Override
    public int updateByExampleSelective(FavoriteHouse record, FavoriteHouseExample example) throws Exception {
    		return dao.updateByExampleSelective(record, example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table favorite_house
     *
     * @date 2020-02-10 16:50:53
     */
    @Override
    public int updateByExample(FavoriteHouse record, FavoriteHouseExample example) throws Exception {
    		return dao.updateByExample(record, example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table favorite_house
     *
     * @date 2020-02-10 16:50:53
     */
    @Override
    public int updateByPrimaryKeySelective(FavoriteHouse record) throws Exception {
    		return dao.updateByPrimaryKeySelective(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table favorite_house
     *
     * @date 2020-02-10 16:50:53
     */
    @Override
    public int updateByPrimaryKey(FavoriteHouse record) throws Exception {
    		return dao.updateByPrimaryKey(record);
    }

    @Override
    public Page<Object> pageQueryFavoriteHouse(FavoriteHouseQuery queryVo) {
        Page page = new Page(queryVo.getPageNum(),queryVo.getPageSize());
        FavoriteHouseExample example = new FavoriteHouseExample();
        FavoriteHouseExample.Criteria criteria = example.createCriteria();
        criteria.andLanguageTypeEqualTo(queryVo.getLanguageType());
        criteria.andHouseTypeEqualTo(queryVo.getHouseType());
        criteria.andUserIdEqualTo(queryVo.getUserId());
        List<FavoriteHouse> list = dao.pageQueryByExample(page,example);
        List<Long> houseIds = new ArrayList<>();
        for (FavoriteHouse favoriteHouse :list){
            houseIds.add(favoriteHouse.getHouseId());
        }
        if(houseIds.isEmpty()){
            houseIds.add(-1L);
        }
        //0 汉语 1维语
        if("0".equalsIgnoreCase(queryVo.getLanguageType())){
            HouseResourceExample houseResourceExample = new HouseResourceExample();
            HouseResourceExample.Criteria criteria1 = houseResourceExample.createCriteria();
            criteria1.andIdIn(houseIds);
            criteria1.andSellStatusEqualTo(0);
            List<HouseResource> houseResources = houseResourceDAO.getByExample(houseResourceExample);
            return page.setRecords(houseResources);
        }else {
            UygurHouseResourceExample uygurHouseResourceExample = new UygurHouseResourceExample();
            UygurHouseResourceExample.Criteria criteria1 = uygurHouseResourceExample.createCriteria();
            criteria1.andIdIn(houseIds);
            criteria1.andSellStatusEqualTo(0);
            List<UygurHouseResource> uygurHouseResources = uygurHouseResourceDAO.getByExample(uygurHouseResourceExample);
            return page.setRecords(uygurHouseResources);
        }
    }

    @Override
    public int deleteByConditions(FavoriteHouse favoriteHouse) {
        return dao.deleteByConditions(favoriteHouse.getUserId(),favoriteHouse.getHouseId());
    }

    @Override
    public FavoriteHouse findHouseStatus(String userId, Long houseId, String language) {
        return dao.findByHouseIdAndUserIdLanguage(houseId,userId,language);
    }
}
