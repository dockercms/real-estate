package com.ztuo.modules.house.service.impl;

import com.ztuo.modules.house.dao.HouseCountDAO;
import com.ztuo.modules.house.entity.HouseCount;
import com.ztuo.modules.house.entity.HouseCountExample;
import com.ztuo.modules.house.entity.HouseCountNews;
import com.ztuo.modules.house.service.IHouseCountSV;
import com.ztuo.modules.house.vo.HouseCountVO;
import com.ztuo.modules.sys.entity.SysOrgEntity;
import com.ztuo.modules.sys.service.SysOrgService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

@Service
public class HouseCountSVImpl implements IHouseCountSV {

    @Autowired
    private HouseCountDAO dao;

    @Autowired
    private SysOrgService sysOrgService;

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table house_count
     *
     * @date 2020-03-09 16:41:08
     */
    public int countByExample(HouseCountExample example) throws Exception {
    		return dao.countByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table house_count
     *
     * @date 2020-03-09 16:41:08
     */
    public int deleteByExample(HouseCountExample example) throws Exception {
    		return dao.deleteByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table house_count
     *
     * @date 2020-03-09 16:41:08
     */
    public int deleteByPrimaryKey(Long parameterId) throws Exception {
    		return dao.deleteByPrimaryKey(parameterId);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table house_count
     *
     * @date 2020-03-09 16:41:08
     */
    public int save(HouseCount record) throws Exception {
    		return dao.save(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table house_count
     *
     * @date 2020-03-09 16:41:08
     */
    public int saveSelective(HouseCount record) throws Exception {
    		return dao.saveSelective(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table house_count
     *
     * @date 2020-03-09 16:41:08
     */
    public List<HouseCount> getByExample(HouseCountExample example) throws Exception {
    		return dao.getByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table house_count
     *
     * @date 2020-03-09 16:41:08
     */
    public HouseCount getByPrimaryKey(Long parameterId) throws Exception {
    		return dao.getByPrimaryKey(parameterId);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table house_count
     *
     * @date 2020-03-09 16:41:08
     */
    public int updateByExampleSelective(HouseCount record, HouseCountExample example) throws Exception {
    		return dao.updateByExampleSelective(record, example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table house_count
     *
     * @date 2020-03-09 16:41:08
     */
    public int updateByExample(HouseCount record, HouseCountExample example) throws Exception {
    		return dao.updateByExample(record, example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table house_count
     *
     * @date 2020-03-09 16:41:08
     */
    public int updateByPrimaryKeySelective(HouseCount record) throws Exception {
    		return dao.updateByPrimaryKeySelective(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table house_count
     *
     * @date 2020-03-09 16:41:08
     */
    public int updateByPrimaryKey(HouseCount record) throws Exception {
    		return dao.updateByPrimaryKey(record);
    }

    @Override
    public List<HouseCountNews> getAll(HouseCountVO houseCountVO) {
        List<HouseCountNews> result = new ArrayList<>();
        HouseCountExample example = new HouseCountExample();
        HouseCountExample.Criteria criteria = example.createCriteria();
        criteria.andCityCodeEqualTo(houseCountVO.getCityCode());
        if ("0".equals(houseCountVO.getEstateType())){
            criteria.andNewHouseCountGreaterThan(0);
            return dao.getByExampleNews(example);
        }else if ("1".equals(houseCountVO.getEstateType())){
            criteria.andRentHouseCountGreaterThan(0);
            return dao.getByExampleRent(example);
        }else if ("2".equals(houseCountVO.getEstateType())){
            criteria.andSecondHouseCountGreaterThan(0);
            return dao.getByExampleSecond(example);
        }
        return result;
    }

    @Override
    public int saveByOrg(SysOrgEntity sysOrg) {
        if (sysOrg.getOrgType().equals(3)){
            SysOrgEntity parent = sysOrgService.getByOrgNo(sysOrg.getParentNo());
            if (parent != null){
                HouseCount houseCount = new HouseCount();
                houseCount.setProvinceCode("01");
                houseCount.setProvinceWy("شىنجاڭ");
                houseCount.setHouseRegionProvince("新疆");
                houseCount.setCityCode(parent.getOrgNo());
                houseCount.setCityWy(parent.getOrgNameWy());
                houseCount.setHouseRegionCity(parent.getOrgName());
                houseCount.setAreaCode(sysOrg.getOrgNo());
                houseCount.setAreaWy(sysOrg.getOrgNameWy());
                houseCount.setHouseRegionArea(sysOrg.getOrgName());
                houseCount.setNewHouseCount(0);
                houseCount.setRentHouseCount(0);
                houseCount.setSecondHouseCount(0);
                int save = dao.save(houseCount);
                return save;
            }
        }
        return 0;
    }

    @Override
    public int addAccount(String estateType,String areaCode) {
        return dao.addAccount(estateType,areaCode);
    }

    @Override
    public int subNewAccount(String areaCode) {
        return dao.subNewAccount(areaCode);
    }

    @Override
    public int subRentAccount(String areaCode) {
        return dao.subRentAccount(areaCode);
    }

    @Override
    public int subSecondAccount(String areaCode) {
        return dao.subSecondAccount(areaCode);
    }

    @Override
    public void addAccountByType(String estateType, String areaCode) {
        //9-新房 10-二手房 11-租房(0-新房,1-租房,2-二手房)
        if ("9".equals(estateType)){
            dao.addAccount("0",areaCode);
        }else if ("10".equals(estateType)){
            dao.addAccount("2",areaCode);
        }else if ("11".equals(estateType)){
            dao.addAccount("1",areaCode);
        }
    }

    @Override
    public void subAccountByType(String estateType, String areaCode) {
        //9-新房 10-二手房 11-租房(0-新房,1-租房,2-二手房)
        if ("9".equals(estateType)){
            dao.subNewAccount(areaCode);
        }else if ("10".equals(estateType)){
            dao.subSecondAccount(areaCode);
        }else if ("11".equals(estateType)){
            dao.subRentAccount(areaCode);
        }
    }

    @Override
    public void subAccountByType(String estateType, String areaCode, Integer account) {
        //9-新房 10-二手房 11-租房(0-新房,1-租房,2-二手房)
        if ("9".equals(estateType)){
            dao.subNewAccountMore(areaCode,account);
        }else if ("10".equals(estateType)){
            dao.subSecondAccountMore(areaCode,account);
        }else if ("11".equals(estateType)){
            dao.subRentAccountMore(areaCode,account);
        }
    }
}
