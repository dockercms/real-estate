package com.ztuo.modules.house.service.impl;


import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.ztuo.modules.house.dao.ScanHouseRecordDAO;
import com.ztuo.modules.house.entity.ScanHouseRecord;
import com.ztuo.modules.house.entity.ScanHouseRecordExample;
import com.ztuo.modules.house.service.IScanHouseRecordSV;
import com.ztuo.modules.house.vo.BaseQueryVo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class ScanHouseRecordSVImpl implements IScanHouseRecordSV {
    
    @Autowired
    private ScanHouseRecordDAO dao;
    
    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table scan_house_record
     *
     * @date 2020-03-02 18:25:52
     */
    @Override
    public int countByExample(ScanHouseRecordExample example) throws Exception {
    		return dao.countByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table scan_house_record
     *
     * @date 2020-03-02 18:25:52
     */
    @Override
    public int deleteByExample(ScanHouseRecordExample example) throws Exception {
    		return dao.deleteByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table scan_house_record
     *
     * @date 2020-03-02 18:25:52
     */
    @Override
    public int deleteByPrimaryKey(Long parameterId) throws Exception {
    		return dao.deleteByPrimaryKey(parameterId);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table scan_house_record
     *
     * @date 2020-03-02 18:25:52
     */
    @Override
    public int save(ScanHouseRecord record) throws Exception {
    		return dao.save(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table scan_house_record
     *
     * @date 2020-03-02 18:25:52
     */
    @Override
    public int saveSelective(ScanHouseRecord record) throws Exception {
    		return dao.saveSelective(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table scan_house_record
     *
     * @date 2020-03-02 18:25:52
     */
    @Override
    public List<ScanHouseRecord> getByExample(ScanHouseRecordExample example) throws Exception {
    		return dao.getByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table scan_house_record
     *
     * @date 2020-03-02 18:25:52
     */
    @Override
    public ScanHouseRecord getByPrimaryKey(Long parameterId) throws Exception {
    		return dao.getByPrimaryKey(parameterId);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table scan_house_record
     *
     * @date 2020-03-02 18:25:52
     */
    @Override
    public int updateByExampleSelective(ScanHouseRecord record, ScanHouseRecordExample example) throws Exception {
    		return dao.updateByExampleSelective(record, example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table scan_house_record
     *
     * @date 2020-03-02 18:25:52
     */
    @Override
    public int updateByExample(ScanHouseRecord record, ScanHouseRecordExample example) throws Exception {
    		return dao.updateByExample(record, example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table scan_house_record
     *
     * @date 2020-03-02 18:25:52
     */
    @Override
    public int updateByPrimaryKeySelective(ScanHouseRecord record) throws Exception {
    		return dao.updateByPrimaryKeySelective(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table scan_house_record
     *
     * @date 2020-03-02 18:25:52
     */
    @Override
    public int updateByPrimaryKey(ScanHouseRecord record) throws Exception {
    		return dao.updateByPrimaryKey(record);
    }

    @Override
    public Page<ScanHouseRecord> pageQuery(BaseQueryVo queryVo) {
        Page<ScanHouseRecord> page = new Page<>(queryVo.getPageNum(),queryVo.getPageSize());
        ScanHouseRecordExample example = new ScanHouseRecordExample();
        ScanHouseRecordExample.Criteria criteria = example.createCriteria();
        criteria.andUserIdEqualTo(queryVo.getUserId());
        example.setOrderByClause(" create_time desc ");
        List<ScanHouseRecord> list = dao.pageQueryByExample(page, example);
        return page.setRecords(list);
    }
}
