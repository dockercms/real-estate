package com.ztuo.modules.house.service.impl;

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.ztuo.common.utils.StringUtils;
import com.ztuo.modules.house.dao.TbAppVersionDAO;
import com.ztuo.modules.house.entity.TbAppVersion;
import com.ztuo.modules.house.entity.TbAppVersionExample;
import com.ztuo.modules.house.service.ITbAppVersionSV;
import com.ztuo.modules.house.vo.BaseQueryVo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class TbAppVersionSVImpl implements ITbAppVersionSV {
    
    @Autowired
    private TbAppVersionDAO dao;
    
    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table tb_app_version
     *
     * @date 2019-07-13 10:22:13
     */
    public int countByExample(TbAppVersionExample example) throws Exception {
    		return dao.countByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table tb_app_version
     *
     * @date 2019-07-13 10:22:13
     */
    public int deleteByExample(TbAppVersionExample example) throws Exception {
    		return dao.deleteByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table tb_app_version
     *
     * @date 2019-07-13 10:22:13
     */
    public int deleteByPrimaryKey(Long parameterId) throws Exception {
    		return dao.deleteByPrimaryKey(parameterId);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table tb_app_version
     *
     * @date 2019-07-13 10:22:13
     */
    public int save(TbAppVersion record) throws Exception {
    		return dao.save(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table tb_app_version
     *
     * @date 2019-07-13 10:22:13
     */
    public int saveSelective(TbAppVersion record) throws Exception {
    		return dao.saveSelective(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table tb_app_version
     *
     * @date 2019-07-13 10:22:13
     */
    public List<TbAppVersion> getByExample(TbAppVersionExample example) throws Exception {
    		return dao.getByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table tb_app_version
     *
     * @date 2019-07-13 10:22:13
     */
    public TbAppVersion getByPrimaryKey(Long parameterId) throws Exception {
    		return dao.getByPrimaryKey(parameterId);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table tb_app_version
     *
     * @date 2019-07-13 10:22:13
     */
    public int updateByExampleSelective(TbAppVersion record, TbAppVersionExample example) throws Exception {
    		return dao.updateByExampleSelective(record, example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table tb_app_version
     *
     * @date 2019-07-13 10:22:13
     */
    public int updateByExample(TbAppVersion record, TbAppVersionExample example) throws Exception {
    		return dao.updateByExample(record, example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table tb_app_version
     *
     * @date 2019-07-13 10:22:13
     */
    public int updateByPrimaryKeySelective(TbAppVersion record) throws Exception {
    		return dao.updateByPrimaryKeySelective(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table tb_app_version
     *
     * @date 2019-07-13 10:22:13
     */
    public int updateByPrimaryKey(TbAppVersion record) throws Exception {
    		return dao.updateByPrimaryKey(record);
    }

    @Override
    public Page<TbAppVersion> pageQueryByVO(BaseQueryVo queryVO, String appCate) {
        Page page = new Page(queryVO.getPageNum(),queryVO.getPageSize());
        TbAppVersionExample example = new TbAppVersionExample();
        if(StringUtils.isNotBlank(appCate)){
            example.createCriteria().andAppCateEqualTo(appCate);
        }
        example.setOrderByClause("id desc ");

        List<TbAppVersion > appVersions = dao.getPageByExample(page,example);
        return page.setRecords(appVersions);
    }

    @Override
    public List<TbAppVersion> findAppVersionByVersionAndCate(String appVersion, String appCate) {
        TbAppVersionExample example = new TbAppVersionExample();
        TbAppVersionExample.Criteria criteria = example.createCriteria();
        criteria.andAppCateEqualTo(appCate);
        criteria.andAppVersionEqualTo(appVersion);

        return dao.getByExample(example);
    }

    @Override
    public TbAppVersion findAppVersionByAppCate(String appCate) {
        Page page = new Page(1,1);
        TbAppVersionExample example = new TbAppVersionExample();
        example.createCriteria().andAppCateEqualTo(appCate);
        example.setOrderByClause("id desc ");
        List<TbAppVersion> appVersions = dao.getPageByExample(page,example);
        if(appVersions!=null && appVersions.size()==1){
            return appVersions.get(0);
        }
        return null;
    }
}
