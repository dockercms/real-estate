<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <!--＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
 * 文件名: BrokerGuestMapper.xml
 * 创建日期: 2020-03-05 14:39:15
 * 表名: broker_guest
 * Java文件目录: \src
 * 配置文件目录: \ss
 * 查询服务接口: main.iservice.IBrokerGuestSV
 * 查询服务实现: main.service.impl.BrokerGuestSVImpl
 * This comment is generated by IDE Plugin, do not modify.
 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝-->
 
<mapper namespace="com.ztuo.modules.house.dao.BrokerGuestDAO" >

  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <resultMap id="BaseResultMap" type="com.ztuo.modules.house.entity.BrokerGuest" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="client_name" property="clientName" jdbcType="VARCHAR" />
    <result column="client_phone" property="clientPhone" jdbcType="VARCHAR" />
    <result column="house_region" property="houseRegion" jdbcType="VARCHAR" />
    <result column="area_code" property="areaCode" jdbcType="VARCHAR" />
    <result column="province_code" property="provinceCode" jdbcType="VARCHAR" />
    <result column="city_code" property="cityCode" jdbcType="VARCHAR" />
    <result column="street_code" property="streetCode" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="VARCHAR" />
    <result column="house_area" property="houseArea" jdbcType="VARCHAR" />
    <result column="house_type" property="houseType" jdbcType="VARCHAR" />
    <result column="house_floor" property="houseFloor" jdbcType="VARCHAR" />
    <result column="towards" property="towards" jdbcType="INTEGER" />
    <result column="decoration_type" property="decorationType" jdbcType="INTEGER" />
    <result column="reason_demand" property="reasonDemand" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="record_status" property="recordStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="broker_id" property="brokerId" jdbcType="BIGINT" />
  </resultMap>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <sql id="Base_Column_List" >
    id, <!-- id -->
    client_name, <!-- 客户姓名 -->
    client_phone, <!-- 客户手机号 -->
    house_region, <!-- 区域 -->
    area_code, <!-- 城市编码 -->
    province_code, <!-- 省编码 -->
    city_code, <!-- 市编码 -->
    street_code, <!-- 街道编码 -->
    price, <!-- 金额 -->
    house_area, <!-- 面积 -->
    house_type, <!-- 户型 -->
    house_floor, <!-- 楼层 -->
    towards, <!-- 房屋朝向 0-东 1-西 2-南 3-北 4-南北 5-东西 6-东南 7-西南 8-东北 9-西北 -->
    decoration_type, <!-- 装修类型 0-毛坯房 1-简装 2-精装修 3-豪装 -->
    reason_demand, <!-- 需求原因 -->
    remark, <!-- 备注 -->
    record_status, <!-- 0-正常 1-前端删除 -->
    create_time, <!-- 创建时间 -->
    update_time, <!-- 更新时间 -->
    broker_id  <!-- 所属经纪人id -->
  </sql>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <select id="getByExample" resultMap="BaseResultMap" parameterType="com.ztuo.modules.house.entity.BrokerGuestExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from broker_guest
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <select id="getByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from broker_guest
    where
      id = #{id,jdbcType=BIGINT}
  </select>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from broker_guest
    where
      id = #{id,jdbcType=BIGINT}
  </delete>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <delete id="deleteByExample" parameterType="com.ztuo.modules.house.entity.BrokerGuestExample" >
    delete from broker_guest
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <insert id="save" parameterType="com.ztuo.modules.house.entity.BrokerGuest" >
    insert into broker_guest (id, client_name, client_phone, house_region, area_code, province_code, city_code, street_code, price, house_area, house_type, house_floor, towards, decoration_type, reason_demand, remark, record_status, create_time, update_time, broker_id)
    values (#{id,jdbcType=BIGINT},#{clientName,jdbcType=VARCHAR},#{clientPhone,jdbcType=VARCHAR},#{houseRegion,jdbcType=VARCHAR},#{areaCode,jdbcType=VARCHAR},#{provinceCode,jdbcType=VARCHAR},#{cityCode,jdbcType=VARCHAR},#{streetCode,jdbcType=VARCHAR},#{price,jdbcType=VARCHAR},#{houseArea,jdbcType=VARCHAR},#{houseType,jdbcType=VARCHAR},#{houseFloor,jdbcType=VARCHAR},#{towards,jdbcType=INTEGER},#{decorationType,jdbcType=INTEGER},#{reasonDemand,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR},#{recordStatus,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP},#{brokerId,jdbcType=BIGINT})
  </insert>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <insert id="saveSelective" parameterType="com.ztuo.modules.house.entity.BrokerGuest" >
    insert into broker_guest
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="clientName != null" >
        client_name,
      </if>
      <if test="clientPhone != null" >
        client_phone,
      </if>
      <if test="houseRegion != null" >
        house_region,
      </if>
      <if test="areaCode != null" >
        area_code,
      </if>
      <if test="provinceCode != null" >
        province_code,
      </if>
      <if test="cityCode != null" >
        city_code,
      </if>
      <if test="streetCode != null" >
        street_code,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="houseArea != null" >
        house_area,
      </if>
      <if test="houseType != null" >
        house_type,
      </if>
      <if test="houseFloor != null" >
        house_floor,
      </if>
      <if test="towards != null" >
        towards,
      </if>
      <if test="decorationType != null" >
        decoration_type,
      </if>
      <if test="reasonDemand != null" >
        reason_demand,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="recordStatus != null" >
        record_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="brokerId != null" >
        broker_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="clientName != null" >
        #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="clientPhone != null" >
        #{clientPhone,jdbcType=VARCHAR},
      </if>
      <if test="houseRegion != null" >
        #{houseRegion,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null" >
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="provinceCode != null" >
        #{provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null" >
        #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="streetCode != null" >
        #{streetCode,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="houseArea != null" >
        #{houseArea,jdbcType=VARCHAR},
      </if>
      <if test="houseType != null" >
        #{houseType,jdbcType=VARCHAR},
      </if>
      <if test="houseFloor != null" >
        #{houseFloor,jdbcType=VARCHAR},
      </if>
      <if test="towards != null" >
        #{towards,jdbcType=INTEGER},
      </if>
      <if test="decorationType != null" >
        #{decorationType,jdbcType=INTEGER},
      </if>
      <if test="reasonDemand != null" >
        #{reasonDemand,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="brokerId != null" >
        #{brokerId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <select id="countByExample" parameterType="com.ztuo.modules.house.entity.BrokerGuestExample" resultType="java.lang.Integer" >
    select count(*) from broker_guest
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <update id="updateByExampleSelective" parameterType="map" >
    update broker_guest
    <set>
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.clientName != null" >
        client_name = #{record.clientName,jdbcType=VARCHAR},
      </if>
      <if test="record.clientPhone != null" >
        client_phone = #{record.clientPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.houseRegion != null" >
        house_region = #{record.houseRegion,jdbcType=VARCHAR},
      </if>
      <if test="record.areaCode != null" >
        area_code = #{record.areaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.provinceCode != null" >
        province_code = #{record.provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.cityCode != null" >
        city_code = #{record.cityCode,jdbcType=VARCHAR},
      </if>
      <if test="record.streetCode != null" >
        street_code = #{record.streetCode,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=VARCHAR},
      </if>
      <if test="record.houseArea != null" >
        house_area = #{record.houseArea,jdbcType=VARCHAR},
      </if>
      <if test="record.houseType != null" >
        house_type = #{record.houseType,jdbcType=VARCHAR},
      </if>
      <if test="record.houseFloor != null" >
        house_floor = #{record.houseFloor,jdbcType=VARCHAR},
      </if>
      <if test="record.towards != null" >
        towards = #{record.towards,jdbcType=INTEGER},
      </if>
      <if test="record.decorationType != null" >
        decoration_type = #{record.decorationType,jdbcType=INTEGER},
      </if>
      <if test="record.reasonDemand != null" >
        reason_demand = #{record.reasonDemand,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.recordStatus != null" >
        record_status = #{record.recordStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.brokerId != null" >
        broker_id = #{record.brokerId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <update id="updateByExample" parameterType="map" >
    update broker_guest
    set
      id = #{record.id,jdbcType=BIGINT},
      client_name = #{record.clientName,jdbcType=VARCHAR},
      client_phone = #{record.clientPhone,jdbcType=VARCHAR},
      house_region = #{record.houseRegion,jdbcType=VARCHAR},
      area_code = #{record.areaCode,jdbcType=VARCHAR},
      province_code = #{record.provinceCode,jdbcType=VARCHAR},
      city_code = #{record.cityCode,jdbcType=VARCHAR},
      street_code = #{record.streetCode,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=VARCHAR},
      house_area = #{record.houseArea,jdbcType=VARCHAR},
      house_type = #{record.houseType,jdbcType=VARCHAR},
      house_floor = #{record.houseFloor,jdbcType=VARCHAR},
      towards = #{record.towards,jdbcType=INTEGER},
      decoration_type = #{record.decorationType,jdbcType=INTEGER},
      reason_demand = #{record.reasonDemand,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      record_status = #{record.recordStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      broker_id = #{record.brokerId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <update id="updateByPrimaryKeySelective" parameterType="com.ztuo.modules.house.entity.BrokerGuest" >
    update broker_guest
    <set >
      <if test="clientName != null" >
        client_name = #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="clientPhone != null" >
        client_phone = #{clientPhone,jdbcType=VARCHAR},
      </if>
      <if test="houseRegion != null" >
        house_region = #{houseRegion,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null" >
        area_code = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="provinceCode != null" >
        province_code = #{provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null" >
        city_code = #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="streetCode != null" >
        street_code = #{streetCode,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="houseArea != null" >
        house_area = #{houseArea,jdbcType=VARCHAR},
      </if>
      <if test="houseType != null" >
        house_type = #{houseType,jdbcType=VARCHAR},
      </if>
      <if test="houseFloor != null" >
        house_floor = #{houseFloor,jdbcType=VARCHAR},
      </if>
      <if test="towards != null" >
        towards = #{towards,jdbcType=INTEGER},
      </if>
      <if test="decorationType != null" >
        decoration_type = #{decorationType,jdbcType=INTEGER},
      </if>
      <if test="reasonDemand != null" >
        reason_demand = #{reasonDemand,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        record_status = #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="brokerId != null" >
        broker_id = #{brokerId,jdbcType=BIGINT},
      </if>
    </set>
    where 
      id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <update id="updateByPrimaryKey" parameterType="com.ztuo.modules.house.entity.BrokerGuest" >
    update broker_guest
    set 
      client_name = #{clientName,jdbcType=VARCHAR},
      client_phone = #{clientPhone,jdbcType=VARCHAR},
      house_region = #{houseRegion,jdbcType=VARCHAR},
      area_code = #{areaCode,jdbcType=VARCHAR},
      province_code = #{provinceCode,jdbcType=VARCHAR},
      city_code = #{cityCode,jdbcType=VARCHAR},
      street_code = #{streetCode,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      house_area = #{houseArea,jdbcType=VARCHAR},
      house_type = #{houseType,jdbcType=VARCHAR},
      house_floor = #{houseFloor,jdbcType=VARCHAR},
      towards = #{towards,jdbcType=INTEGER},
      decoration_type = #{decorationType,jdbcType=INTEGER},
      reason_demand = #{reasonDemand,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      record_status = #{recordStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
	  broker_id = #{brokerId,jdbcType=BIGINT}
    where
      id = #{id,jdbcType=BIGINT}
  </update>

  <select id="pageQueryByExample" resultMap="BaseResultMap" parameterType="com.ztuo.modules.house.entity.BrokerGuestExample" >
    select
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from broker_guest
    <if test="_parameter != null" >
      <include refid="Page_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
  </select>

  <sql id="Page_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

</mapper>