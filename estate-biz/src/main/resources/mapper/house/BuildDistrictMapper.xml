<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <!--＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
 * 文件名: BuildDistrictMapper.xml
 * 创建日期: 2020-03-04 16:01:03
 * 表名: build_district
 * Java文件目录: /src
 * 配置文件目录: /ss
 * 查询服务接口: com.ztuo.modules.house.iservice.IBuildDistrictSV
 * 查询服务实现: com.ztuo.modules.house.service.impl.BuildDistrictSVImpl
 * This comment is generated by IDE Plugin, do not modify.
 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝-->
 
<mapper namespace="com.ztuo.modules.house.dao.BuildDistrictDAO" >

  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <resultMap id="BaseResultMap" type="com.ztuo.modules.house.entity.BuildDistrict" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="super_parent_no" property="superParentNo" jdbcType="VARCHAR" />
    <result column="parent_no" property="parentNo" jdbcType="VARCHAR" />
    <result column="build_cate" property="buildCate" jdbcType="CHAR" />
    <result column="area_code" property="areaCode" jdbcType="VARCHAR" />
    <result column="apply_name" property="applyName" jdbcType="VARCHAR" />
    <result column="build_status" property="buildStatus" jdbcType="CHAR" />
    <result column="build_name" property="buildName" jdbcType="VARCHAR" />
    <result column="build_name_wy" property="buildNameWy" jdbcType="VARCHAR" />
    <result column="detail_address" property="detailAddress" jdbcType="VARCHAR" />
    <result column="detail_address_wy" property="detailAddressWy" jdbcType="VARCHAR" />
    <result column="build_years" property="buildYears" jdbcType="INTEGER" />
    <result column="create_years" property="createYears" jdbcType="INTEGER" />
    <result column="developer" property="developer" jdbcType="VARCHAR" />
    <result column="development" property="development" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <sql id="Base_Column_List" >
    id, <!-- 主键 -->
    super_parent_no, <!-- 上级机构ID -->
    parent_no, <!-- 上级机构ID -->
    build_cate, <!-- 0砖混1钢筋混凝土2钢结构 -->
    area_code, <!-- 所属市 -->
    apply_name, <!-- 申请人 -->
    build_status, <!-- 是否可用 -->
    build_name, <!-- 小区名称 -->
    build_name_wy, <!-- 小区名称 -->
    detail_address, <!-- 详细地址 -->
    detail_address_wy, <!-- 详细地址维语 -->
    build_years, <!-- 年限 -->
    create_years, <!-- 建成年代 -->
    developer, <!-- 开发商 -->
    development, <!-- 开发商 -->
    create_time, <!-- 创建时间 -->
    update_time, <!-- 修改时间 -->
    remark  
  </sql>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <select id="getByExample" resultMap="BaseResultMap" parameterType="com.ztuo.modules.house.entity.BuildDistrictExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from build_district
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <select id="getByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from build_district
    where
      id = #{id,jdbcType=BIGINT}
  </select>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from build_district
    where
      id = #{id,jdbcType=BIGINT}
  </delete>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <delete id="deleteByExample" parameterType="com.ztuo.modules.house.entity.BuildDistrictExample" >
    delete from build_district
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <insert id="save" parameterType="com.ztuo.modules.house.entity.BuildDistrict" >
    insert into build_district (id, super_parent_no, parent_no, build_cate, area_code, apply_name, build_status, build_name, build_name_wy, detail_address, detail_address_wy, build_years, create_years, developer, development, create_time, update_time, remark)
    values (#{id,jdbcType=BIGINT},#{superParentNo,jdbcType=VARCHAR},#{parentNo,jdbcType=VARCHAR},#{buildCate,jdbcType=CHAR},#{areaCode,jdbcType=VARCHAR},#{applyName,jdbcType=VARCHAR},#{buildStatus,jdbcType=CHAR},#{buildName,jdbcType=VARCHAR},#{buildNameWy,jdbcType=VARCHAR},#{detailAddress,jdbcType=VARCHAR},#{detailAddressWy,jdbcType=VARCHAR},#{buildYears,jdbcType=INTEGER},#{createYears,jdbcType=INTEGER},#{developer,jdbcType=VARCHAR},#{development,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP},#{remark,jdbcType=VARCHAR})
  </insert>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <insert id="saveSelective" parameterType="com.ztuo.modules.house.entity.BuildDistrict" >
    insert into build_district
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="superParentNo != null" >
        super_parent_no,
      </if>
      <if test="parentNo != null" >
        parent_no,
      </if>
      <if test="buildCate != null" >
        build_cate,
      </if>
      <if test="areaCode != null" >
        area_code,
      </if>
      <if test="applyName != null" >
        apply_name,
      </if>
      <if test="buildStatus != null" >
        build_status,
      </if>
      <if test="buildName != null" >
        build_name,
      </if>
      <if test="buildNameWy != null" >
        build_name_wy,
      </if>
      <if test="detailAddress != null" >
        detail_address,
      </if>
      <if test="detailAddressWy != null" >
        detail_address_wy,
      </if>
      <if test="buildYears != null" >
        build_years,
      </if>
      <if test="createYears != null" >
        create_years,
      </if>
      <if test="developer != null" >
        developer,
      </if>
      <if test="development != null" >
        development,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="superParentNo != null" >
        #{superParentNo,jdbcType=VARCHAR},
      </if>
      <if test="parentNo != null" >
        #{parentNo,jdbcType=VARCHAR},
      </if>
      <if test="buildCate != null" >
        #{buildCate,jdbcType=CHAR},
      </if>
      <if test="areaCode != null" >
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="applyName != null" >
        #{applyName,jdbcType=VARCHAR},
      </if>
      <if test="buildStatus != null" >
        #{buildStatus,jdbcType=CHAR},
      </if>
      <if test="buildName != null" >
        #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="buildNameWy != null" >
        #{buildNameWy,jdbcType=VARCHAR},
      </if>
      <if test="detailAddress != null" >
        #{detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="detailAddressWy != null" >
        #{detailAddressWy,jdbcType=VARCHAR},
      </if>
      <if test="buildYears != null" >
        #{buildYears,jdbcType=INTEGER},
      </if>
      <if test="createYears != null" >
        #{createYears,jdbcType=INTEGER},
      </if>
      <if test="developer != null" >
        #{developer,jdbcType=VARCHAR},
      </if>
      <if test="development != null" >
        #{development,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <select id="countByExample" parameterType="com.ztuo.modules.house.entity.BuildDistrictExample" resultType="java.lang.Integer" >
    select count(*) from build_district
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <update id="updateByExampleSelective" parameterType="map" >
    update build_district
    <set>
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.superParentNo != null" >
        super_parent_no = #{record.superParentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.parentNo != null" >
        parent_no = #{record.parentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.buildCate != null" >
        build_cate = #{record.buildCate,jdbcType=CHAR},
      </if>
      <if test="record.areaCode != null" >
        area_code = #{record.areaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.applyName != null" >
        apply_name = #{record.applyName,jdbcType=VARCHAR},
      </if>
      <if test="record.buildStatus != null" >
        build_status = #{record.buildStatus,jdbcType=CHAR},
      </if>
      <if test="record.buildName != null" >
        build_name = #{record.buildName,jdbcType=VARCHAR},
      </if>
      <if test="record.buildNameWy != null" >
        build_name_wy = #{record.buildNameWy,jdbcType=VARCHAR},
      </if>
      <if test="record.detailAddress != null" >
        detail_address = #{record.detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.detailAddressWy != null" >
        detail_address_wy = #{record.detailAddressWy,jdbcType=VARCHAR},
      </if>
      <if test="record.buildYears != null" >
        build_years = #{record.buildYears,jdbcType=INTEGER},
      </if>
      <if test="record.createYears != null" >
        create_years = #{record.createYears,jdbcType=INTEGER},
      </if>
      <if test="record.developer != null" >
        developer = #{record.developer,jdbcType=VARCHAR},
      </if>
      <if test="record.development != null" >
        development = #{record.development,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <update id="updateByExample" parameterType="map" >
    update build_district
    set
      id = #{record.id,jdbcType=BIGINT},
      super_parent_no = #{record.superParentNo,jdbcType=VARCHAR},
      parent_no = #{record.parentNo,jdbcType=VARCHAR},
      build_cate = #{record.buildCate,jdbcType=CHAR},
      area_code = #{record.areaCode,jdbcType=VARCHAR},
      apply_name = #{record.applyName,jdbcType=VARCHAR},
      build_status = #{record.buildStatus,jdbcType=CHAR},
      build_name = #{record.buildName,jdbcType=VARCHAR},
      build_name_wy = #{record.buildNameWy,jdbcType=VARCHAR},
      detail_address = #{record.detailAddress,jdbcType=VARCHAR},
      detail_address_wy = #{record.detailAddressWy,jdbcType=VARCHAR},
      build_years = #{record.buildYears,jdbcType=INTEGER},
      create_years = #{record.createYears,jdbcType=INTEGER},
      developer = #{record.developer,jdbcType=VARCHAR},
      development = #{record.development,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <update id="updateByPrimaryKeySelective" parameterType="com.ztuo.modules.house.entity.BuildDistrict" >
    update build_district
    <set >
      <if test="superParentNo != null" >
        super_parent_no = #{superParentNo,jdbcType=VARCHAR},
      </if>
      <if test="parentNo != null" >
        parent_no = #{parentNo,jdbcType=VARCHAR},
      </if>
      <if test="buildCate != null" >
        build_cate = #{buildCate,jdbcType=CHAR},
      </if>
      <if test="areaCode != null" >
        area_code = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="applyName != null" >
        apply_name = #{applyName,jdbcType=VARCHAR},
      </if>
      <if test="buildStatus != null" >
        build_status = #{buildStatus,jdbcType=CHAR},
      </if>
      <if test="buildName != null" >
        build_name = #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="buildNameWy != null" >
        build_name_wy = #{buildNameWy,jdbcType=VARCHAR},
      </if>
      <if test="detailAddress != null" >
        detail_address = #{detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="detailAddressWy != null" >
        detail_address_wy = #{detailAddressWy,jdbcType=VARCHAR},
      </if>
      <if test="buildYears != null" >
        build_years = #{buildYears,jdbcType=INTEGER},
      </if>
      <if test="createYears != null" >
        create_years = #{createYears,jdbcType=INTEGER},
      </if>
      <if test="developer != null" >
        developer = #{developer,jdbcType=VARCHAR},
      </if>
      <if test="development != null" >
        development = #{development,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where 
      id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- This element is automatically generated by IDE Plugin, do not modify. -->
  <update id="updateByPrimaryKey" parameterType="com.ztuo.modules.house.entity.BuildDistrict" >
    update build_district
    set 
      super_parent_no = #{superParentNo,jdbcType=VARCHAR},
      parent_no = #{parentNo,jdbcType=VARCHAR},
      build_cate = #{buildCate,jdbcType=CHAR},
      area_code = #{areaCode,jdbcType=VARCHAR},
      apply_name = #{applyName,jdbcType=VARCHAR},
      build_status = #{buildStatus,jdbcType=CHAR},
      build_name = #{buildName,jdbcType=VARCHAR},
      build_name_wy = #{buildNameWy,jdbcType=VARCHAR},
      detail_address = #{detailAddress,jdbcType=VARCHAR},
      detail_address_wy = #{detailAddressWy,jdbcType=VARCHAR},
      build_years = #{buildYears,jdbcType=INTEGER},
      create_years = #{createYears,jdbcType=INTEGER},
      developer = #{developer,jdbcType=VARCHAR},
      development = #{development,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
	  remark = #{remark,jdbcType=VARCHAR}
    where
      id = #{id,jdbcType=BIGINT}
  </update>
  
  
  <sql id="Page_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <select id="pageQuery" resultMap="BaseResultMap" parameterType="com.ztuo.modules.house.entity.BuildDistrictExample" >
    select
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from build_district
    <if test="_parameter != null" >
      <include refid="Page_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
  </select>

  <resultMap id="BaseInfo" type="com.ztuo.modules.house.vo.BuildVO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="build_name" property="buildName" jdbcType="VARCHAR" />
    <result column="detail_address" property="detailAddress" jdbcType="VARCHAR" />
  </resultMap>


  <resultMap id="BaseInfoWy" type="com.ztuo.modules.house.vo.BuildVO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="build_name_wy" property="buildName" jdbcType="VARCHAR" />
    <result column="detail_address_wy" property="detailAddress" jdbcType="VARCHAR" />
  </resultMap>


  <select id="getBuildInfo" resultMap="BaseInfo">
    select id,build_name,detail_address
    from build_district
    where parent_no = #{parentNo,jdbcType=VARCHAR} and build_status = '0'
  </select>

  <select id="getBuildInfoWy" resultMap="BaseInfoWy">
    select id,build_name_wy,detail_address_wy
    from build_district
    where parent_no = #{parentNo,jdbcType=VARCHAR} and build_status = '0'
  </select>
  
</mapper>